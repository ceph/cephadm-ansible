# -*- mode: ruby -*-
# vi: set ft=ruby :

# took from ceph-ansible project

NNODE           = 6
NCLIENTS        = 2
LABEL_PREFIX    = 'ceph-'
MEMORY          = 1024
PUBLIC_SUBNET   = '192.168.9'
CLUSTER_SUBNET  = '192.168.10'
BOX             = ENV['CEPH_ANSIBLE_VAGRANT_BOX']

ansible_provision = proc do |ansible|
    ansible.playbook = '../playbooks/cephadm-preflight.yml'
    ansible.groups = {
      'ceph_cluster'             => (0..NNODE - 1).map { |j| "#{LABEL_PREFIX}node#{j}" },
      'clients'          => (0..NCLIENTS - 1).map { |j| "client#{j}" },
    }
    ansible.limit = 'all'
    ansible.verbose = '-vv'
    ansible.extra_vars = {
      ceph_origin: "community",
    }
end

Vagrant.configure('2') do |config|
  config.vm.box =  BOX
  config.ssh.insert_key = false # workaround for https://github.com/mitchellh/vagrant/issues/5048
#  config.ssh.private_key_path = settings['ssh_private_key_path']
  config.ssh.username = 'vagrant'
  config.vm.provider :libvirt do |lv|
    lv.cpu_mode = 'host-passthrough'
    lv.disk_driver :cache => 'unsafe'
    lv.graphics_type = 'none'
    lv.cpus = 4
  end

$last_ip_pub_digit   = 9
$last_ip_cluster_digit = 9

config.vm.provider :libvirt do |v,override|
  override.vm.synced_folder '.', '/vagrant', disabled: true
end


  (0..NCLIENTS - 1).each do |i|
    config.vm.define "client#{i}" do |client|
      client.vm.hostname = "client#{i}"
      client.vm.network :private_network,
        ip: "#{PUBLIC_SUBNET}.#{$last_ip_pub_digit+=1}"

      # Libvirt
      client.vm.provider :libvirt do |lv|
        lv.memory = MEMORY
        lv.random_hostname = true
      end
    end
  end

  (0..NNODE - 1).each do |i|
    config.vm.define "#{LABEL_PREFIX}node#{i}" do |node|
      node.vm.hostname = "#{LABEL_PREFIX}node#{i}"
      node.vm.network :private_network,
        ip: "#{PUBLIC_SUBNET}.#{$last_ip_pub_digit+=1}"
      node.vm.network :private_network,
        ip: "#{CLUSTER_SUBNET}.#{$last_ip_cluster_digit+=1}"

      # Libvirt
      driverletters = ('a'..'z').to_a
      node.vm.provider :libvirt do |lv|
        # always make /dev/sd{a/b/c} so that CI can ensure that
        # virtualbox and libvirt will have the same devices to use for OSDs
        (0..2).each do |d|
          lv.storage :file, :device => "hd#{driverletters[d]}", :size => '50G', :bus => "ide"
        end
        lv.memory = MEMORY
        lv.random_hostname = true
      end
      node.vm.provision 'ansible', &ansible_provision if i == (NNODE - 1)
    end
  end
end
